#!/bin/bash

# Directory where the application resides
DIR=/apps/MfolloDaemons/OutMessagesDaemon/dist
# Application JAR file (may be in a sub folder)
JAR_FILE=$DIR/OutMessagesDaemon.jar
# The PID file location
PID=/var/run/OutMessaging.pid
# JVM in use
JAVA_HOME=/usr/lib/jvm/jre-1.7.0-openjdk/
# Name of the daemon (will be displayed during start/stop)
NAME="Out Messaging Daemon"
# Main class implementing the Daemon interface
MAIN_CLASS=outmessagesdaemon.DaemonRun

MIN_MEMORY=-Xms16m
MAX_MEMORY=-Xmx32m

JSVC=/usr/bin/jsvc


# You can enable a security policy if you need it here
#SECURITY_POLICY="-Djava.security.manager -Djava.security.policy=$DIR/daemon.policy"
SECURITY_POLICY=

# Set to 1 to enable debugging
DEBUG=1
DEBUG_OUTPUT_FILE=$DIR/output.txt
DEBUG_ERROR_FILE=$DIR/log.txt

# DO NOT EDIT BELOW THIS LINE ======================================================

usage() {
	echo $"Usage: $0 {start|stop}"
	return 0
}

start() {
    echo $"Starting the $NAME..."

    cd $DIR

    if [[ $DEBUG -eq 1 ]]; then
        $JSVC -debug -pidfile $PID -home $JAVA_HOME $SECURITY_POLICY -outfile $DEBUG_OUTPUT_FILE -errfile $DEBUG_ERROR_FILE $MIN_MEMORY $MAX_MEMORY -cp $JAR_FILE $MAIN_CLASS
    else
        $JSVC -pidfile $PID -home $JAVA_HOME $SECURITY_POLICY $MIN_MEMORY $MAX_MEMORY -cp $JAR_FILE $MAIN_CLASS
    fi

    # Check status of the application
    if [[ $? -eq 0 ]]; then
        echo $"$NAME Successfully STARTED"
        echo
        return 0
    else
        echo $"Failed to START $NAME"
        echo
        return 1
    fi
}

stop() {
    echo $"Stopping the $NAME..."

    cd $DIR

    if [[ $DEBUG -eq 1 ]]; then
        $JSVC -debug -stop -home $JAVA_HOME -pidfile $PID $SECURITY_POLICY -outfile $DEBUG_OUTPUT_FILE -errfile $DEBUG_ERROR_FILE $MIN_MEMORY $MAX_MEMORY -cp $JAR_FILE $MAIN_CLASS
    else
        $JSVC -stop -home $JAVA_HOME -pidfile $PID $SECURITY_POLICY $MIN_MEMORY $MAX_MEMORY -cp $JAR_FILE $MAIN_CLASS
    fi

    if [[ -e $PID ]]; then
        # Kill the process (so we are sure that it has stopped)
        KPID=`cat $PID`
        KPID1=$(($KPID - 1))
        kill -9 $KPID $KPID1
        rm -f $PID
    fi

    # Check status of the application
    if [[ $? -eq 0 ]]; then
        echo $"$NAME Successfully STOPPED"
        echo
        return 0
    else
        echo $"Failed to STOP $NAME"
        echo
        return 1
    fi
    echo
}

case "$1" in
    start)
        start
    ;;
    stop)
        stop
    ;;
    *)
        echo $"Usage: $0 {start|stop}"
        exit 1

esac

exit $?

